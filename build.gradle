buildscript {
	repositories {
		maven {
			url "http://repo.spring.io/libs-snapshot"
			mavenLocal()
		}
		dependencies {
			classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.0.RC1")
		}
	}
}

apply plugin: 'java'
apply plugin: 'idea'
//apply plugin: 'war'

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0'

buildDir = 'build'

repositories {
	mavenCentral()
	maven {
        url "http://repo.spring.io/libs-snapshot"
    }
}

ext {
	versions = [
        springBoot: '1.0.2.RELEASE',
        spring: '3.2.10.RELEASE',
        springSecurity: '3.2.4.RELEASE',
        springData: '1.6.2.RELEASE',
        hibernate: '4.3.6.Final',
        dbcp: '1.4',
        mockito: '1.9.5',
        servlet: '2.2',
        tomcat: '7.0.55'
	]
}

dependencies {
	testCompile group: "junit", name: "junit", version: "4.11"
	compile "org.projectlombok:lombok:1.14.4"
    compile "org.springframework:spring-core:${versions.spring}"
	compile "org.springframework:spring-beans:${versions.spring}"
	compile "org.springframework:spring-context:${versions.spring}"
	compile "org.springframework:spring-context-support:${versions.spring}"
	compile "org.springframework:spring-webmvc:${versions.spring}"
	compile "org.springframework:spring-test:${versions.spring}"
    compile "org.springframework.data:spring-data-jpa:${versions.springData}"
	compile "org.hibernate:hibernate-core:${versions.hibernate}"
	compile "org.hibernate:hibernate-entitymanager:${versions.hibernate}"
    compile 'com.h2database:h2:1.4.180'
	compile "commons-dbcp:commons-dbcp:${versions.dbcp}"
	compile "org.mockito:mockito-all:${versions.mockito}"
	compile "javax.servlet:javax.servlet-api:3.0.1"
    compile "javax.servlet.jsp:jsp-api:2.2"
    compile 'jstl:jstl:1.2'
    compile 'org.thymeleaf:thymeleaf:2.1.3.RELEASE'
	compile 'org.thymeleaf:thymeleaf-spring3:2.1.3.RELEASE'
	compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.5'
}


sourceSets.each { set ->
	set.java.srcDirs.each { dir ->
		if (!dir.exists()) {
			dir.mkdirs()
		}
	}
	set.resources.srcDirs.each { dir ->
		if (!dir.exists()) {
			dir.mkdirs()
		}
	}
}

if (!buildDir.exists()) {
	buildDir.mkdirs()
}